{"version":3,"sources":["../../../../src/graphql/resolvers/Note/index.js"],"names":["Query","note","root","args","Promise","resolve","reject","Note","findOne","exec","err","res","notes","find","populate","Mutation","addNote","name","text","newNote","save","editNote","_id","findOneAndUpdate","$set","deleteNote","findOneAndRemove"],"mappings":";;;;;;;AACA;;;;AADA;eAGe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,cAACC,IAAD,EAAOC,IAAP,EAAgB;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,sBAAKC,OAAL,CAAaL,IAAb,EAAmBM,IAAnB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KAPE;AAQHC,IAAAA,KAAK,EAAE,iBAAM;AACT,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,sBAAKM,IAAL,CAAU,EAAV,EACKC,QADL,GAEKL,IAFL,CAEU,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAJL;AAKH,OANM,CAAP;AAOH;AAhBE,GADI;AAmBXI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,iBAACd,IAAD,QAAwB;AAAA,UAAhBe,IAAgB,QAAhBA,IAAgB;AAAA,UAAVC,IAAU,QAAVA,IAAU;AAC7B,UAAMC,OAAO,GAAG,IAAIZ,aAAJ,CAAS;AAAEU,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,IAAI,EAAJA;AAAR,OAAT,CAAhB;AAEA,aAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCa,QAAAA,OAAO,CAACC,IAAR,CAAa,UAACV,GAAD,EAAMC,GAAN,EAAc;AACvBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KATK;AAUNU,IAAAA,QAAQ,EAAE,kBAACnB,IAAD,SAA6B;AAAA,UAArBoB,GAAqB,SAArBA,GAAqB;AAAA,UAAhBL,IAAgB,SAAhBA,IAAgB;AAAA,UAAVC,IAAU,SAAVA,IAAU;AACnC,aAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,sBAAKgB,gBAAL,CAAsB;AAACD,UAAAA,GAAG,EAAHA;AAAD,SAAtB,EAA6B;AAACE,UAAAA,IAAI,EAAE;AAACP,YAAAA,IAAI,EAAJA,IAAD;AAAOC,YAAAA,IAAI,EAAJA;AAAP;AAAP,SAA7B,EAAmDT,IAAnD,CACI,UAACC,GAAD,EAAMC,GAAN,EAAc;AACVD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAHL;AAKH,OANM,CAAP;AAOH,KAlBK;AAmBNc,IAAAA,UAAU,EAAE,oBAACvB,IAAD,EAAOC,IAAP,EAAgB;AACxB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,sBAAKmB,gBAAL,CAAsBvB,IAAtB,EAA4BM,IAA5B,CAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAzBK;AAnBC,C","sourcesContent":["// Note schema.\nimport Note from \"../../../models/Note\";\n\nexport default {\n    Query: {\n        note: (root, args) => {\n            return new Promise((resolve, reject) => {\n                Note.findOne(args).exec((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        },\n        notes: () => {\n            return new Promise((resolve, reject) => {\n                Note.find({})\n                    .populate()\n                    .exec((err, res) => {\n                        err ? reject(err) : resolve(res);\n                    });\n            });\n        }\n    },\n    Mutation: {\n        addNote: (root, {name, text}) => {\n            const newNote = new Note({ name, text});\n\n            return new Promise((resolve, reject) => {\n                newNote.save((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        },\n        editNote: (root, {_id, name, text}) => {\n            return new Promise((resolve, reject) => {\n                Note.findOneAndUpdate({_id}, {$set: {name, text}}).exec(\n                    (err, res) => {\n                        err ? reject(err) : resolve(res);\n                    }\n                );\n            });\n        },\n        deleteNote: (root, args) => {\n            return new Promise((resolve, reject) => {\n                Note.findOneAndRemove(args).exec((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        }\n    }\n};\n"],"file":"index.js"}